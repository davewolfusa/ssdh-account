package com.metageek.ssdh.account.service.resource;

import com.metageek.ssdh.account.service.resource.AuthenticationResource.*;

import static java.nio.charset.StandardCharsets.UTF_8;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;
import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.HEAD;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.junit.Test;

import com.metageek.ssdh.account.CredentialStore;
import com.metageek.ssdh.account.model.Credential;
import com.metageek.ssdh.account.util.MapperUtil;
import com.metageek.ssdh.account.util.PasswordUtil;
import com.metageek.ssdh.account.util.ViolationUtil;
import junit.framework.TestCase;

public class AuthenticationResourceTest extends TestCase {

	@Test
	public void test_type() throws Exception {
		// TODO auto-generated by JUnit Helper.
		assertNotNull(AuthenticationResource.class);
	}

	@Test
	public void test_instantiation() throws Exception {
		// TODO auto-generated by JUnit Helper.
		AuthenticationResource target = new AuthenticationResource();
		assertNotNull(target);
	}

	@Test
	public void test_login() throws Exception {
		// TODO auto-generated by JUnit Helper.
		AccountResource accounTarget = new AccountResource();
		String accountJsonRequest = 
  "{ " +
  "\"credential\" : { \"userName\" : \"johndoe\", \"password\" : \"LXfd6Ji7YCZHTW.pv/xk\" }, " + 
  "\"profile\" : { \"firstName\" : \"John\", \"lastName\" : \"Doe\", \"emailAddress\" : \"john.doe@gmail.com\" }" +
  "}";

		Response accountResult = accounTarget.createAccount(accountJsonRequest);
        
		AuthenticationResource target = new AuthenticationResource();
		String jsonRequest = "{ \"userName\" : \"johndoe\", \"password\" : \"LXfd6Ji7YCZHTW.pv/xk\" } ";
		Response result = target.login(jsonRequest);
		assertNotNull(result);
		assertEquals(200, result.getStatus());
		assertEquals("{result=AUTHENTICATED}", result.getEntity().toString());
	}

}
